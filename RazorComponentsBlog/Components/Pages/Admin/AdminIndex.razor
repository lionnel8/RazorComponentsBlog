@page "/admin"
@page "/admin/page/{pageIndex:int}"

@using RazorComponentsBlog.Models
@using RazorComponentsBlog.Services
@using Gobln.Pager;
@using Microsoft.AspNetCore.Components.Services

@inject IUriHelper UriHelper
@inject ArticleService ArticleService
@inject IJSRuntime JSRuntime

<div class="container rcb-container">
    <div class="row">
        <div class="col-12">
            <h1 class="text-center mt-5 mb-5">Seznam článků</h1>
            <a href="/admin/article/new" class="btn btn-teal mb-4">Přidat nový článek<i class="fas fa-plus ml-2"></i></a>
        </div>

        @if (!displayedArticles.Any())
        {
            <div class="col-12">
                <p>Načítání článků</p>
            </div>
        }
        else
        {
            @foreach (var article in displayedArticles)
            {
                <AdminArticleItem ArticleId="@article.ArticleId"
                                  Title="@article.Title"
                                  Created="@article.Created"
                                  Url="@article.Url"
                                  Article="@article"
                                  OnArticleDelete="@OnArticleDelete">
                </AdminArticleItem>
            }
        }
    </div>
    @if (articles.Any())
    {
        <Pager PageCount="@articles.PageCount"
               CurrentPage="@PageIndex"
               HasNextPage="@articles.HasNextPage"
               HasPreviousPage="@articles.HasPreviousPage"
               OnPageChanged="@ChangePage">
        </Pager>
    }
</div>

@functions {

    [Parameter]
    public int PageIndex { get; set; }

    private PagedList<Article> articles = new PagedList<Article>();

    private List<Article> displayedArticles = new List<Article>();

    private int pageSize = 10;

    protected override async Task OnInitAsync()
    {
        articles = await ArticleService.GetPagedArticles();
        articles.PageSize = pageSize;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSetAsync();
        if (PageIndex == 0)
        {
            PageIndex = 1;
        }
        displayedArticles = articles.GetPage(PageIndex).ToList();
    }

    private void ChangePage(int pageIndex)
    {
        if (pageIndex == 1)
        {
            UriHelper.NavigateTo("/admin");
        }
        else
        {
            UriHelper.NavigateTo("/admin/page/" + pageIndex.ToString());
        }

        PageIndex = pageIndex;
        this.StateHasChanged();
    }

    private void OnArticleDelete(Article article)
    {
        articles.Remove(article);
        displayedArticles = articles.GetPage(PageIndex).ToList();
        this.StateHasChanged();
    }
}



